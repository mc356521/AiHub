<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 从 application.properties 中读取属性 -->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="AIHub"/>
    <springProperty scope="context" name="LOG_PATH" source="logging.file.path" defaultValue="logs"/>
    <property name="LOG_FILE_NAME" value="${APP_NAME}"/>

    <!-- 1. 控制台输出 Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度，%logger{50}表示logger名字最长50个字符，%msg为日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 2. 文件输出 Appender (按天、按大小滚动) -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径和名称 -->
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>

        <!-- 使用基于时间和大小的滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档文件的名称, %d for date, %i for index -->
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 每个归档文件最大10MB -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 所有归档文件总大小最大1GB -->
            <totalSizeCap>1GB</totalSizeCap>
            <!-- 最多保留30天的历史日志 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 指定特定包的日志级别 -->
    <!-- 我们自己的应用代码使用DEBUG级别，可以看到更详细的日志 -->
    <logger name="com.example.aihub" level="DEBUG"/>
    <!-- Spring框架的日志级别设为INFO，避免过多的框架内部日志刷屏 -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.mybatis" level="INFO"/>

    <!-- 根日志记录器 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration> 